input {
  beats {
    port => 5044
    ssl => false
  }
}

filter {
  if [event][module] == "system" {
    if [event][dataset] == "auth" {
      grok {
        match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{DATA:program}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:message}" }
      }
      
      # Extract authentication events
      if [message] =~ "Failed password" {
        mutate {
          add_tag => [ "authentication_failure" ]
        }
        grok {
          match => { "message" => "Failed password for %{USERNAME:user} from %{IP:source_ip}" }
        }
      }
      else if [message] =~ "Accepted password" {
        mutate {
          add_tag => [ "authentication_success" ]
        }
        grok {
          match => { "message" => "Accepted password for %{USERNAME:user} from %{IP:source_ip}" }
        }
      }
    }
  }
  
  # Add GeoIP information for IP addresses
  if [source_ip] {
    geoip {
      source => "source_ip"
      target => "source_geo"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    ssl => false
  }
}

